/*
 *
 * TAK-BLE
 * Copyright (c) 2023 Raytheon Technologies
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see https://www.gnu.org/licenses/.
 * https://github.com/atapas/add-copyright.git
 *
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cotevent.proto

package com.atakmap.android.ble_forwarder.proto.generated;

public final class Cotevent {
  private Cotevent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CotEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CotEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * &lt;event type="x"&gt;
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    String getType();
    /**
     * <pre>
     * &lt;event type="x"&gt;
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * optional, but see below!
     * </pre>
     *
     * <code>optional string access = 2;</code>
     */
    String getAccess();
    /**
     * <pre>
     * optional, but see below!
     * </pre>
     *
     * <code>optional string access = 2;</code>
     */
    com.google.protobuf.ByteString
        getAccessBytes();

    /**
     * <pre>
     * field was optional in early
     * cot implementations but now required
     * in MIL-STD-6090.
     * This message definition treats as
     * "optional" due to legacy definition/use,
     * but updated/new clients should be
     * populating on all outgoing message and
     * should treat any missing/empty value
     * as CoT value "Undefined".
     * A CoT/XML value of "Undefined" for this
     * field should be conveyed in this message
     * by omitting this value for compactness
     * </pre>
     *
     * <code>optional string qos = 3;</code>
     */
    String getQos();
    /**
     * <pre>
     * field was optional in early
     * cot implementations but now required
     * in MIL-STD-6090.
     * This message definition treats as
     * "optional" due to legacy definition/use,
     * but updated/new clients should be
     * populating on all outgoing message and
     * should treat any missing/empty value
     * as CoT value "Undefined".
     * A CoT/XML value of "Undefined" for this
     * field should be conveyed in this message
     * by omitting this value for compactness
     * </pre>
     *
     * <code>optional string qos = 3;</code>
     */
    com.google.protobuf.ByteString
        getQosBytes();

    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string opex = 4;</code>
     */
    String getOpex();
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string opex = 4;</code>
     */
    com.google.protobuf.ByteString
        getOpexBytes();

    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string caveat = 16;</code>
     */
    String getCaveat();
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string caveat = 16;</code>
     */
    com.google.protobuf.ByteString
        getCaveatBytes();

    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string releaseableTo = 17;</code>
     */
    String getReleaseableTo();
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string releaseableTo = 17;</code>
     */
    com.google.protobuf.ByteString
        getReleaseableToBytes();

    /**
     * <pre>
     * &lt;event uid="x"&gt;
     * </pre>
     *
     * <code>optional string uid = 5;</code>
     */
    String getUid();
    /**
     * <pre>
     * &lt;event uid="x"&gt;
     * </pre>
     *
     * <code>optional string uid = 5;</code>
     */
    com.google.protobuf.ByteString
        getUidBytes();

    /**
     * <pre>
     * &lt;event time="x"&gt; converted to timeMs
     * </pre>
     *
     * <code>optional uint64 sendTime = 6;</code>
     */
    long getSendTime();

    /**
     * <pre>
     * &lt;event start="x"&gt; converted to timeMs
     * </pre>
     *
     * <code>optional uint64 startTime = 7;</code>
     */
    long getStartTime();

    /**
     * <pre>
     * &lt;event stale="x"&gt; converted to timeMs
     * </pre>
     *
     * <code>optional uint64 staleTime = 8;</code>
     */
    long getStaleTime();

    /**
     * <pre>
     * &lt;event how="x"&gt;
     * </pre>
     *
     * <code>optional string how = 9;</code>
     */
    String getHow();
    /**
     * <pre>
     * &lt;event how="x"&gt;
     * </pre>
     *
     * <code>optional string how = 9;</code>
     */
    com.google.protobuf.ByteString
        getHowBytes();

    /**
     * <pre>
     * &lt;point&gt;
     * </pre>
     *
     * <code>optional double lat = 10;</code>
     */
    double getLat();

    /**
     * <pre>
     * &lt;point lon="x"&gt;
     * </pre>
     *
     * <code>optional double lon = 11;</code>
     */
    double getLon();

    /**
     * <pre>
     * &lt;point hae="x"&gt; use 999999 for unknown
     * </pre>
     *
     * <code>optional double hae = 12;</code>
     */
    double getHae();

    /**
     * <pre>
     * &lt;point ce="x"&gt; use 999999 for unknown
     * </pre>
     *
     * <code>optional double ce = 13;</code>
     */
    double getCe();

    /**
     * <pre>
     * &lt;point ce="x"&gt; use 999999 for unknown
     * </pre>
     *
     * <code>optional double le = 14;</code>
     */
    double getLe();

    /**
     * <pre>
     * comprises children of &lt;detail&gt;
     * This is optional - if omitted, then the cot message
     * had no data under &lt;detail&gt;
     * </pre>
     *
     * <code>optional .Detail detail = 15;</code>
     */
    boolean hasDetail();
    /**
     * <pre>
     * comprises children of &lt;detail&gt;
     * This is optional - if omitted, then the cot message
     * had no data under &lt;detail&gt;
     * </pre>
     *
     * <code>optional .Detail detail = 15;</code>
     */
    DetailOuterClass.Detail getDetail();
    /**
     * <pre>
     * comprises children of &lt;detail&gt;
     * This is optional - if omitted, then the cot message
     * had no data under &lt;detail&gt;
     * </pre>
     *
     * <code>optional .Detail detail = 15;</code>
     */
    DetailOuterClass.DetailOrBuilder getDetailOrBuilder();
  }
  /**
   * <pre>
   * A note about timestamps:
   * Uses "timeMs" units, which is number of milliseconds since
   * 1970-01-01 00:00:00 UTC
   * All items are required unless otherwise noted!
   * "required" means if they are missing in the XML during outbound
   * conversion to protobuf, the message will be
   * rejected
   * </pre>
   *
   * Protobuf type {@code CotEvent}
   */
  public  static final class CotEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CotEvent)
      CotEventOrBuilder {
    // Use CotEvent.newBuilder() to construct.
    private CotEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CotEvent() {
      type_ = "";
      access_ = "";
      qos_ = "";
      opex_ = "";
      caveat_ = "";
      releaseableTo_ = "";
      uid_ = "";
      sendTime_ = 0L;
      startTime_ = 0L;
      staleTime_ = 0L;
      how_ = "";
      lat_ = 0D;
      lon_ = 0D;
      hae_ = 0D;
      ce_ = 0D;
      le_ = 0D;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CotEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              access_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              qos_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              opex_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              uid_ = s;
              break;
            }
            case 48: {

              sendTime_ = input.readUInt64();
              break;
            }
            case 56: {

              startTime_ = input.readUInt64();
              break;
            }
            case 64: {

              staleTime_ = input.readUInt64();
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              how_ = s;
              break;
            }
            case 81: {

              lat_ = input.readDouble();
              break;
            }
            case 89: {

              lon_ = input.readDouble();
              break;
            }
            case 97: {

              hae_ = input.readDouble();
              break;
            }
            case 105: {

              ce_ = input.readDouble();
              break;
            }
            case 113: {

              le_ = input.readDouble();
              break;
            }
            case 122: {
              DetailOuterClass.Detail.Builder subBuilder = null;
              if (detail_ != null) {
                subBuilder = detail_.toBuilder();
              }
              detail_ = input.readMessage(DetailOuterClass.Detail.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(detail_);
                detail_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {
              String s = input.readStringRequireUtf8();

              caveat_ = s;
              break;
            }
            case 138: {
              String s = input.readStringRequireUtf8();

              releaseableTo_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Cotevent.internal_static_CotEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Cotevent.internal_static_CotEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Cotevent.CotEvent.class, Cotevent.CotEvent.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile Object type_;
    /**
     * <pre>
     * &lt;event type="x"&gt;
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public String getType() {
      Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * &lt;event type="x"&gt;
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACCESS_FIELD_NUMBER = 2;
    private volatile Object access_;
    /**
     * <pre>
     * optional, but see below!
     * </pre>
     *
     * <code>optional string access = 2;</code>
     */
    public String getAccess() {
      Object ref = access_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        access_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * optional, but see below!
     * </pre>
     *
     * <code>optional string access = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAccessBytes() {
      Object ref = access_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        access_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QOS_FIELD_NUMBER = 3;
    private volatile Object qos_;
    /**
     * <pre>
     * field was optional in early
     * cot implementations but now required
     * in MIL-STD-6090.
     * This message definition treats as
     * "optional" due to legacy definition/use,
     * but updated/new clients should be
     * populating on all outgoing message and
     * should treat any missing/empty value
     * as CoT value "Undefined".
     * A CoT/XML value of "Undefined" for this
     * field should be conveyed in this message
     * by omitting this value for compactness
     * </pre>
     *
     * <code>optional string qos = 3;</code>
     */
    public String getQos() {
      Object ref = qos_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        qos_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * field was optional in early
     * cot implementations but now required
     * in MIL-STD-6090.
     * This message definition treats as
     * "optional" due to legacy definition/use,
     * but updated/new clients should be
     * populating on all outgoing message and
     * should treat any missing/empty value
     * as CoT value "Undefined".
     * A CoT/XML value of "Undefined" for this
     * field should be conveyed in this message
     * by omitting this value for compactness
     * </pre>
     *
     * <code>optional string qos = 3;</code>
     */
    public com.google.protobuf.ByteString
        getQosBytes() {
      Object ref = qos_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        qos_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPEX_FIELD_NUMBER = 4;
    private volatile Object opex_;
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string opex = 4;</code>
     */
    public String getOpex() {
      Object ref = opex_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        opex_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string opex = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOpexBytes() {
      Object ref = opex_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        opex_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAVEAT_FIELD_NUMBER = 16;
    private volatile Object caveat_;
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string caveat = 16;</code>
     */
    public String getCaveat() {
      Object ref = caveat_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        caveat_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string caveat = 16;</code>
     */
    public com.google.protobuf.ByteString
        getCaveatBytes() {
      Object ref = caveat_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        caveat_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RELEASEABLETO_FIELD_NUMBER = 17;
    private volatile Object releaseableTo_;
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string releaseableTo = 17;</code>
     */
    public String getReleaseableTo() {
      Object ref = releaseableTo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        releaseableTo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>optional string releaseableTo = 17;</code>
     */
    public com.google.protobuf.ByteString
        getReleaseableToBytes() {
      Object ref = releaseableTo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        releaseableTo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UID_FIELD_NUMBER = 5;
    private volatile Object uid_;
    /**
     * <pre>
     * &lt;event uid="x"&gt;
     * </pre>
     *
     * <code>optional string uid = 5;</code>
     */
    public String getUid() {
      Object ref = uid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * &lt;event uid="x"&gt;
     * </pre>
     *
     * <code>optional string uid = 5;</code>
     */
    public com.google.protobuf.ByteString
        getUidBytes() {
      Object ref = uid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENDTIME_FIELD_NUMBER = 6;
    private long sendTime_;
    /**
     * <pre>
     * &lt;event time="x"&gt; converted to timeMs
     * </pre>
     *
     * <code>optional uint64 sendTime = 6;</code>
     */
    public long getSendTime() {
      return sendTime_;
    }

    public static final int STARTTIME_FIELD_NUMBER = 7;
    private long startTime_;
    /**
     * <pre>
     * &lt;event start="x"&gt; converted to timeMs
     * </pre>
     *
     * <code>optional uint64 startTime = 7;</code>
     */
    public long getStartTime() {
      return startTime_;
    }

    public static final int STALETIME_FIELD_NUMBER = 8;
    private long staleTime_;
    /**
     * <pre>
     * &lt;event stale="x"&gt; converted to timeMs
     * </pre>
     *
     * <code>optional uint64 staleTime = 8;</code>
     */
    public long getStaleTime() {
      return staleTime_;
    }

    public static final int HOW_FIELD_NUMBER = 9;
    private volatile Object how_;
    /**
     * <pre>
     * &lt;event how="x"&gt;
     * </pre>
     *
     * <code>optional string how = 9;</code>
     */
    public String getHow() {
      Object ref = how_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        how_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * &lt;event how="x"&gt;
     * </pre>
     *
     * <code>optional string how = 9;</code>
     */
    public com.google.protobuf.ByteString
        getHowBytes() {
      Object ref = how_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        how_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAT_FIELD_NUMBER = 10;
    private double lat_;
    /**
     * <pre>
     * &lt;point&gt;
     * </pre>
     *
     * <code>optional double lat = 10;</code>
     */
    public double getLat() {
      return lat_;
    }

    public static final int LON_FIELD_NUMBER = 11;
    private double lon_;
    /**
     * <pre>
     * &lt;point lon="x"&gt;
     * </pre>
     *
     * <code>optional double lon = 11;</code>
     */
    public double getLon() {
      return lon_;
    }

    public static final int HAE_FIELD_NUMBER = 12;
    private double hae_;
    /**
     * <pre>
     * &lt;point hae="x"&gt; use 999999 for unknown
     * </pre>
     *
     * <code>optional double hae = 12;</code>
     */
    public double getHae() {
      return hae_;
    }

    public static final int CE_FIELD_NUMBER = 13;
    private double ce_;
    /**
     * <pre>
     * &lt;point ce="x"&gt; use 999999 for unknown
     * </pre>
     *
     * <code>optional double ce = 13;</code>
     */
    public double getCe() {
      return ce_;
    }

    public static final int LE_FIELD_NUMBER = 14;
    private double le_;
    /**
     * <pre>
     * &lt;point ce="x"&gt; use 999999 for unknown
     * </pre>
     *
     * <code>optional double le = 14;</code>
     */
    public double getLe() {
      return le_;
    }

    public static final int DETAIL_FIELD_NUMBER = 15;
    private DetailOuterClass.Detail detail_;
    /**
     * <pre>
     * comprises children of &lt;detail&gt;
     * This is optional - if omitted, then the cot message
     * had no data under &lt;detail&gt;
     * </pre>
     *
     * <code>optional .Detail detail = 15;</code>
     */
    public boolean hasDetail() {
      return detail_ != null;
    }
    /**
     * <pre>
     * comprises children of &lt;detail&gt;
     * This is optional - if omitted, then the cot message
     * had no data under &lt;detail&gt;
     * </pre>
     *
     * <code>optional .Detail detail = 15;</code>
     */
    public DetailOuterClass.Detail getDetail() {
      return detail_ == null ? DetailOuterClass.Detail.getDefaultInstance() : detail_;
    }
    /**
     * <pre>
     * comprises children of &lt;detail&gt;
     * This is optional - if omitted, then the cot message
     * had no data under &lt;detail&gt;
     * </pre>
     *
     * <code>optional .Detail detail = 15;</code>
     */
    public DetailOuterClass.DetailOrBuilder getDetailOrBuilder() {
      return getDetail();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getAccessBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, access_);
      }
      if (!getQosBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, qos_);
      }
      if (!getOpexBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, opex_);
      }
      if (!getUidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, uid_);
      }
      if (sendTime_ != 0L) {
        output.writeUInt64(6, sendTime_);
      }
      if (startTime_ != 0L) {
        output.writeUInt64(7, startTime_);
      }
      if (staleTime_ != 0L) {
        output.writeUInt64(8, staleTime_);
      }
      if (!getHowBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, how_);
      }
      if (lat_ != 0D) {
        output.writeDouble(10, lat_);
      }
      if (lon_ != 0D) {
        output.writeDouble(11, lon_);
      }
      if (hae_ != 0D) {
        output.writeDouble(12, hae_);
      }
      if (ce_ != 0D) {
        output.writeDouble(13, ce_);
      }
      if (le_ != 0D) {
        output.writeDouble(14, le_);
      }
      if (detail_ != null) {
        output.writeMessage(15, getDetail());
      }
      if (!getCaveatBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, caveat_);
      }
      if (!getReleaseableToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, releaseableTo_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getAccessBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, access_);
      }
      if (!getQosBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, qos_);
      }
      if (!getOpexBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, opex_);
      }
      if (!getUidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, uid_);
      }
      if (sendTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, sendTime_);
      }
      if (startTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, startTime_);
      }
      if (staleTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, staleTime_);
      }
      if (!getHowBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, how_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, lat_);
      }
      if (lon_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, lon_);
      }
      if (hae_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, hae_);
      }
      if (ce_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, ce_);
      }
      if (le_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, le_);
      }
      if (detail_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getDetail());
      }
      if (!getCaveatBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, caveat_);
      }
      if (!getReleaseableToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, releaseableTo_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Cotevent.CotEvent)) {
        return super.equals(obj);
      }
      Cotevent.CotEvent other = (Cotevent.CotEvent) obj;

      boolean result = true;
      result = result && getType()
          .equals(other.getType());
      result = result && getAccess()
          .equals(other.getAccess());
      result = result && getQos()
          .equals(other.getQos());
      result = result && getOpex()
          .equals(other.getOpex());
      result = result && getCaveat()
          .equals(other.getCaveat());
      result = result && getReleaseableTo()
          .equals(other.getReleaseableTo());
      result = result && getUid()
          .equals(other.getUid());
      result = result && (getSendTime()
          == other.getSendTime());
      result = result && (getStartTime()
          == other.getStartTime());
      result = result && (getStaleTime()
          == other.getStaleTime());
      result = result && getHow()
          .equals(other.getHow());
      result = result && (
          Double.doubleToLongBits(getLat())
          == Double.doubleToLongBits(
              other.getLat()));
      result = result && (
          Double.doubleToLongBits(getLon())
          == Double.doubleToLongBits(
              other.getLon()));
      result = result && (
          Double.doubleToLongBits(getHae())
          == Double.doubleToLongBits(
              other.getHae()));
      result = result && (
          Double.doubleToLongBits(getCe())
          == Double.doubleToLongBits(
              other.getCe()));
      result = result && (
          Double.doubleToLongBits(getLe())
          == Double.doubleToLongBits(
              other.getLe()));
      result = result && (hasDetail() == other.hasDetail());
      if (hasDetail()) {
        result = result && getDetail()
            .equals(other.getDetail());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ACCESS_FIELD_NUMBER;
      hash = (53 * hash) + getAccess().hashCode();
      hash = (37 * hash) + QOS_FIELD_NUMBER;
      hash = (53 * hash) + getQos().hashCode();
      hash = (37 * hash) + OPEX_FIELD_NUMBER;
      hash = (53 * hash) + getOpex().hashCode();
      hash = (37 * hash) + CAVEAT_FIELD_NUMBER;
      hash = (53 * hash) + getCaveat().hashCode();
      hash = (37 * hash) + RELEASEABLETO_FIELD_NUMBER;
      hash = (53 * hash) + getReleaseableTo().hashCode();
      hash = (37 * hash) + UID_FIELD_NUMBER;
      hash = (53 * hash) + getUid().hashCode();
      hash = (37 * hash) + SENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSendTime());
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartTime());
      hash = (37 * hash) + STALETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStaleTime());
      hash = (37 * hash) + HOW_FIELD_NUMBER;
      hash = (53 * hash) + getHow().hashCode();
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + LON_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLon()));
      hash = (37 * hash) + HAE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getHae()));
      hash = (37 * hash) + CE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getCe()));
      hash = (37 * hash) + LE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLe()));
      if (hasDetail()) {
        hash = (37 * hash) + DETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getDetail().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Cotevent.CotEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Cotevent.CotEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Cotevent.CotEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Cotevent.CotEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Cotevent.CotEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Cotevent.CotEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Cotevent.CotEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Cotevent.CotEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Cotevent.CotEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Cotevent.CotEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Cotevent.CotEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A note about timestamps:
     * Uses "timeMs" units, which is number of milliseconds since
     * 1970-01-01 00:00:00 UTC
     * All items are required unless otherwise noted!
     * "required" means if they are missing in the XML during outbound
     * conversion to protobuf, the message will be
     * rejected
     * </pre>
     *
     * Protobuf type {@code CotEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CotEvent)
        Cotevent.CotEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Cotevent.internal_static_CotEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Cotevent.internal_static_CotEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Cotevent.CotEvent.class, Cotevent.CotEvent.Builder.class);
      }

      // Construct using Cotevent.CotEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = "";

        access_ = "";

        qos_ = "";

        opex_ = "";

        caveat_ = "";

        releaseableTo_ = "";

        uid_ = "";

        sendTime_ = 0L;

        startTime_ = 0L;

        staleTime_ = 0L;

        how_ = "";

        lat_ = 0D;

        lon_ = 0D;

        hae_ = 0D;

        ce_ = 0D;

        le_ = 0D;

        if (detailBuilder_ == null) {
          detail_ = null;
        } else {
          detail_ = null;
          detailBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Cotevent.internal_static_CotEvent_descriptor;
      }

      public Cotevent.CotEvent getDefaultInstanceForType() {
        return Cotevent.CotEvent.getDefaultInstance();
      }

      public Cotevent.CotEvent build() {
        Cotevent.CotEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Cotevent.CotEvent buildPartial() {
        Cotevent.CotEvent result = new Cotevent.CotEvent(this);
        result.type_ = type_;
        result.access_ = access_;
        result.qos_ = qos_;
        result.opex_ = opex_;
        result.caveat_ = caveat_;
        result.releaseableTo_ = releaseableTo_;
        result.uid_ = uid_;
        result.sendTime_ = sendTime_;
        result.startTime_ = startTime_;
        result.staleTime_ = staleTime_;
        result.how_ = how_;
        result.lat_ = lat_;
        result.lon_ = lon_;
        result.hae_ = hae_;
        result.ce_ = ce_;
        result.le_ = le_;
        if (detailBuilder_ == null) {
          result.detail_ = detail_;
        } else {
          result.detail_ = detailBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Cotevent.CotEvent) {
          return mergeFrom((Cotevent.CotEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Cotevent.CotEvent other) {
        if (other == Cotevent.CotEvent.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getAccess().isEmpty()) {
          access_ = other.access_;
          onChanged();
        }
        if (!other.getQos().isEmpty()) {
          qos_ = other.qos_;
          onChanged();
        }
        if (!other.getOpex().isEmpty()) {
          opex_ = other.opex_;
          onChanged();
        }
        if (!other.getCaveat().isEmpty()) {
          caveat_ = other.caveat_;
          onChanged();
        }
        if (!other.getReleaseableTo().isEmpty()) {
          releaseableTo_ = other.releaseableTo_;
          onChanged();
        }
        if (!other.getUid().isEmpty()) {
          uid_ = other.uid_;
          onChanged();
        }
        if (other.getSendTime() != 0L) {
          setSendTime(other.getSendTime());
        }
        if (other.getStartTime() != 0L) {
          setStartTime(other.getStartTime());
        }
        if (other.getStaleTime() != 0L) {
          setStaleTime(other.getStaleTime());
        }
        if (!other.getHow().isEmpty()) {
          how_ = other.how_;
          onChanged();
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getLon() != 0D) {
          setLon(other.getLon());
        }
        if (other.getHae() != 0D) {
          setHae(other.getHae());
        }
        if (other.getCe() != 0D) {
          setCe(other.getCe());
        }
        if (other.getLe() != 0D) {
          setLe(other.getLe());
        }
        if (other.hasDetail()) {
          mergeDetail(other.getDetail());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Cotevent.CotEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Cotevent.CotEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object type_ = "";
      /**
       * <pre>
       * &lt;event type="x"&gt;
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public String getType() {
        Object ref = type_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * &lt;event type="x"&gt;
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * &lt;event type="x"&gt;
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder setType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;event type="x"&gt;
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;event type="x"&gt;
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private Object access_ = "";
      /**
       * <pre>
       * optional, but see below!
       * </pre>
       *
       * <code>optional string access = 2;</code>
       */
      public String getAccess() {
        Object ref = access_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          access_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * optional, but see below!
       * </pre>
       *
       * <code>optional string access = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAccessBytes() {
        Object ref = access_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          access_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * optional, but see below!
       * </pre>
       *
       * <code>optional string access = 2;</code>
       */
      public Builder setAccess(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        access_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional, but see below!
       * </pre>
       *
       * <code>optional string access = 2;</code>
       */
      public Builder clearAccess() {
        
        access_ = getDefaultInstance().getAccess();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional, but see below!
       * </pre>
       *
       * <code>optional string access = 2;</code>
       */
      public Builder setAccessBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        access_ = value;
        onChanged();
        return this;
      }

      private Object qos_ = "";
      /**
       * <pre>
       * field was optional in early
       * cot implementations but now required
       * in MIL-STD-6090.
       * This message definition treats as
       * "optional" due to legacy definition/use,
       * but updated/new clients should be
       * populating on all outgoing message and
       * should treat any missing/empty value
       * as CoT value "Undefined".
       * A CoT/XML value of "Undefined" for this
       * field should be conveyed in this message
       * by omitting this value for compactness
       * </pre>
       *
       * <code>optional string qos = 3;</code>
       */
      public String getQos() {
        Object ref = qos_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          qos_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * field was optional in early
       * cot implementations but now required
       * in MIL-STD-6090.
       * This message definition treats as
       * "optional" due to legacy definition/use,
       * but updated/new clients should be
       * populating on all outgoing message and
       * should treat any missing/empty value
       * as CoT value "Undefined".
       * A CoT/XML value of "Undefined" for this
       * field should be conveyed in this message
       * by omitting this value for compactness
       * </pre>
       *
       * <code>optional string qos = 3;</code>
       */
      public com.google.protobuf.ByteString
          getQosBytes() {
        Object ref = qos_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          qos_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * field was optional in early
       * cot implementations but now required
       * in MIL-STD-6090.
       * This message definition treats as
       * "optional" due to legacy definition/use,
       * but updated/new clients should be
       * populating on all outgoing message and
       * should treat any missing/empty value
       * as CoT value "Undefined".
       * A CoT/XML value of "Undefined" for this
       * field should be conveyed in this message
       * by omitting this value for compactness
       * </pre>
       *
       * <code>optional string qos = 3;</code>
       */
      public Builder setQos(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        qos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * field was optional in early
       * cot implementations but now required
       * in MIL-STD-6090.
       * This message definition treats as
       * "optional" due to legacy definition/use,
       * but updated/new clients should be
       * populating on all outgoing message and
       * should treat any missing/empty value
       * as CoT value "Undefined".
       * A CoT/XML value of "Undefined" for this
       * field should be conveyed in this message
       * by omitting this value for compactness
       * </pre>
       *
       * <code>optional string qos = 3;</code>
       */
      public Builder clearQos() {
        
        qos_ = getDefaultInstance().getQos();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * field was optional in early
       * cot implementations but now required
       * in MIL-STD-6090.
       * This message definition treats as
       * "optional" due to legacy definition/use,
       * but updated/new clients should be
       * populating on all outgoing message and
       * should treat any missing/empty value
       * as CoT value "Undefined".
       * A CoT/XML value of "Undefined" for this
       * field should be conveyed in this message
       * by omitting this value for compactness
       * </pre>
       *
       * <code>optional string qos = 3;</code>
       */
      public Builder setQosBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        qos_ = value;
        onChanged();
        return this;
      }

      private Object opex_ = "";
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string opex = 4;</code>
       */
      public String getOpex() {
        Object ref = opex_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          opex_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string opex = 4;</code>
       */
      public com.google.protobuf.ByteString
          getOpexBytes() {
        Object ref = opex_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          opex_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string opex = 4;</code>
       */
      public Builder setOpex(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        opex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string opex = 4;</code>
       */
      public Builder clearOpex() {
        
        opex_ = getDefaultInstance().getOpex();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string opex = 4;</code>
       */
      public Builder setOpexBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        opex_ = value;
        onChanged();
        return this;
      }

      private Object caveat_ = "";
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string caveat = 16;</code>
       */
      public String getCaveat() {
        Object ref = caveat_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          caveat_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string caveat = 16;</code>
       */
      public com.google.protobuf.ByteString
          getCaveatBytes() {
        Object ref = caveat_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          caveat_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string caveat = 16;</code>
       */
      public Builder setCaveat(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        caveat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string caveat = 16;</code>
       */
      public Builder clearCaveat() {
        
        caveat_ = getDefaultInstance().getCaveat();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string caveat = 16;</code>
       */
      public Builder setCaveatBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        caveat_ = value;
        onChanged();
        return this;
      }

      private Object releaseableTo_ = "";
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string releaseableTo = 17;</code>
       */
      public String getReleaseableTo() {
        Object ref = releaseableTo_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          releaseableTo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string releaseableTo = 17;</code>
       */
      public com.google.protobuf.ByteString
          getReleaseableToBytes() {
        Object ref = releaseableTo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          releaseableTo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string releaseableTo = 17;</code>
       */
      public Builder setReleaseableTo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        releaseableTo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string releaseableTo = 17;</code>
       */
      public Builder clearReleaseableTo() {
        
        releaseableTo_ = getDefaultInstance().getReleaseableTo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>optional string releaseableTo = 17;</code>
       */
      public Builder setReleaseableToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        releaseableTo_ = value;
        onChanged();
        return this;
      }

      private Object uid_ = "";
      /**
       * <pre>
       * &lt;event uid="x"&gt;
       * </pre>
       *
       * <code>optional string uid = 5;</code>
       */
      public String getUid() {
        Object ref = uid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * &lt;event uid="x"&gt;
       * </pre>
       *
       * <code>optional string uid = 5;</code>
       */
      public com.google.protobuf.ByteString
          getUidBytes() {
        Object ref = uid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * &lt;event uid="x"&gt;
       * </pre>
       *
       * <code>optional string uid = 5;</code>
       */
      public Builder setUid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;event uid="x"&gt;
       * </pre>
       *
       * <code>optional string uid = 5;</code>
       */
      public Builder clearUid() {
        
        uid_ = getDefaultInstance().getUid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;event uid="x"&gt;
       * </pre>
       *
       * <code>optional string uid = 5;</code>
       */
      public Builder setUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uid_ = value;
        onChanged();
        return this;
      }

      private long sendTime_ ;
      /**
       * <pre>
       * &lt;event time="x"&gt; converted to timeMs
       * </pre>
       *
       * <code>optional uint64 sendTime = 6;</code>
       */
      public long getSendTime() {
        return sendTime_;
      }
      /**
       * <pre>
       * &lt;event time="x"&gt; converted to timeMs
       * </pre>
       *
       * <code>optional uint64 sendTime = 6;</code>
       */
      public Builder setSendTime(long value) {
        
        sendTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;event time="x"&gt; converted to timeMs
       * </pre>
       *
       * <code>optional uint64 sendTime = 6;</code>
       */
      public Builder clearSendTime() {
        
        sendTime_ = 0L;
        onChanged();
        return this;
      }

      private long startTime_ ;
      /**
       * <pre>
       * &lt;event start="x"&gt; converted to timeMs
       * </pre>
       *
       * <code>optional uint64 startTime = 7;</code>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <pre>
       * &lt;event start="x"&gt; converted to timeMs
       * </pre>
       *
       * <code>optional uint64 startTime = 7;</code>
       */
      public Builder setStartTime(long value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;event start="x"&gt; converted to timeMs
       * </pre>
       *
       * <code>optional uint64 startTime = 7;</code>
       */
      public Builder clearStartTime() {
        
        startTime_ = 0L;
        onChanged();
        return this;
      }

      private long staleTime_ ;
      /**
       * <pre>
       * &lt;event stale="x"&gt; converted to timeMs
       * </pre>
       *
       * <code>optional uint64 staleTime = 8;</code>
       */
      public long getStaleTime() {
        return staleTime_;
      }
      /**
       * <pre>
       * &lt;event stale="x"&gt; converted to timeMs
       * </pre>
       *
       * <code>optional uint64 staleTime = 8;</code>
       */
      public Builder setStaleTime(long value) {
        
        staleTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;event stale="x"&gt; converted to timeMs
       * </pre>
       *
       * <code>optional uint64 staleTime = 8;</code>
       */
      public Builder clearStaleTime() {
        
        staleTime_ = 0L;
        onChanged();
        return this;
      }

      private Object how_ = "";
      /**
       * <pre>
       * &lt;event how="x"&gt;
       * </pre>
       *
       * <code>optional string how = 9;</code>
       */
      public String getHow() {
        Object ref = how_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          how_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * &lt;event how="x"&gt;
       * </pre>
       *
       * <code>optional string how = 9;</code>
       */
      public com.google.protobuf.ByteString
          getHowBytes() {
        Object ref = how_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          how_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * &lt;event how="x"&gt;
       * </pre>
       *
       * <code>optional string how = 9;</code>
       */
      public Builder setHow(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        how_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;event how="x"&gt;
       * </pre>
       *
       * <code>optional string how = 9;</code>
       */
      public Builder clearHow() {
        
        how_ = getDefaultInstance().getHow();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;event how="x"&gt;
       * </pre>
       *
       * <code>optional string how = 9;</code>
       */
      public Builder setHowBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        how_ = value;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <pre>
       * &lt;point&gt;
       * </pre>
       *
       * <code>optional double lat = 10;</code>
       */
      public double getLat() {
        return lat_;
      }
      /**
       * <pre>
       * &lt;point&gt;
       * </pre>
       *
       * <code>optional double lat = 10;</code>
       */
      public Builder setLat(double value) {
        
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;point&gt;
       * </pre>
       *
       * <code>optional double lat = 10;</code>
       */
      public Builder clearLat() {
        
        lat_ = 0D;
        onChanged();
        return this;
      }

      private double lon_ ;
      /**
       * <pre>
       * &lt;point lon="x"&gt;
       * </pre>
       *
       * <code>optional double lon = 11;</code>
       */
      public double getLon() {
        return lon_;
      }
      /**
       * <pre>
       * &lt;point lon="x"&gt;
       * </pre>
       *
       * <code>optional double lon = 11;</code>
       */
      public Builder setLon(double value) {
        
        lon_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;point lon="x"&gt;
       * </pre>
       *
       * <code>optional double lon = 11;</code>
       */
      public Builder clearLon() {
        
        lon_ = 0D;
        onChanged();
        return this;
      }

      private double hae_ ;
      /**
       * <pre>
       * &lt;point hae="x"&gt; use 999999 for unknown
       * </pre>
       *
       * <code>optional double hae = 12;</code>
       */
      public double getHae() {
        return hae_;
      }
      /**
       * <pre>
       * &lt;point hae="x"&gt; use 999999 for unknown
       * </pre>
       *
       * <code>optional double hae = 12;</code>
       */
      public Builder setHae(double value) {
        
        hae_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;point hae="x"&gt; use 999999 for unknown
       * </pre>
       *
       * <code>optional double hae = 12;</code>
       */
      public Builder clearHae() {
        
        hae_ = 0D;
        onChanged();
        return this;
      }

      private double ce_ ;
      /**
       * <pre>
       * &lt;point ce="x"&gt; use 999999 for unknown
       * </pre>
       *
       * <code>optional double ce = 13;</code>
       */
      public double getCe() {
        return ce_;
      }
      /**
       * <pre>
       * &lt;point ce="x"&gt; use 999999 for unknown
       * </pre>
       *
       * <code>optional double ce = 13;</code>
       */
      public Builder setCe(double value) {
        
        ce_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;point ce="x"&gt; use 999999 for unknown
       * </pre>
       *
       * <code>optional double ce = 13;</code>
       */
      public Builder clearCe() {
        
        ce_ = 0D;
        onChanged();
        return this;
      }

      private double le_ ;
      /**
       * <pre>
       * &lt;point ce="x"&gt; use 999999 for unknown
       * </pre>
       *
       * <code>optional double le = 14;</code>
       */
      public double getLe() {
        return le_;
      }
      /**
       * <pre>
       * &lt;point ce="x"&gt; use 999999 for unknown
       * </pre>
       *
       * <code>optional double le = 14;</code>
       */
      public Builder setLe(double value) {
        
        le_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt;point ce="x"&gt; use 999999 for unknown
       * </pre>
       *
       * <code>optional double le = 14;</code>
       */
      public Builder clearLe() {
        
        le_ = 0D;
        onChanged();
        return this;
      }

      private DetailOuterClass.Detail detail_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          DetailOuterClass.Detail, DetailOuterClass.Detail.Builder, DetailOuterClass.DetailOrBuilder> detailBuilder_;
      /**
       * <pre>
       * comprises children of &lt;detail&gt;
       * This is optional - if omitted, then the cot message
       * had no data under &lt;detail&gt;
       * </pre>
       *
       * <code>optional .Detail detail = 15;</code>
       */
      public boolean hasDetail() {
        return detailBuilder_ != null || detail_ != null;
      }
      /**
       * <pre>
       * comprises children of &lt;detail&gt;
       * This is optional - if omitted, then the cot message
       * had no data under &lt;detail&gt;
       * </pre>
       *
       * <code>optional .Detail detail = 15;</code>
       */
      public DetailOuterClass.Detail getDetail() {
        if (detailBuilder_ == null) {
          return detail_ == null ? DetailOuterClass.Detail.getDefaultInstance() : detail_;
        } else {
          return detailBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * comprises children of &lt;detail&gt;
       * This is optional - if omitted, then the cot message
       * had no data under &lt;detail&gt;
       * </pre>
       *
       * <code>optional .Detail detail = 15;</code>
       */
      public Builder setDetail(DetailOuterClass.Detail value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          detail_ = value;
          onChanged();
        } else {
          detailBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * comprises children of &lt;detail&gt;
       * This is optional - if omitted, then the cot message
       * had no data under &lt;detail&gt;
       * </pre>
       *
       * <code>optional .Detail detail = 15;</code>
       */
      public Builder setDetail(
          DetailOuterClass.Detail.Builder builderForValue) {
        if (detailBuilder_ == null) {
          detail_ = builderForValue.build();
          onChanged();
        } else {
          detailBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * comprises children of &lt;detail&gt;
       * This is optional - if omitted, then the cot message
       * had no data under &lt;detail&gt;
       * </pre>
       *
       * <code>optional .Detail detail = 15;</code>
       */
      public Builder mergeDetail(DetailOuterClass.Detail value) {
        if (detailBuilder_ == null) {
          if (detail_ != null) {
            detail_ =
              DetailOuterClass.Detail.newBuilder(detail_).mergeFrom(value).buildPartial();
          } else {
            detail_ = value;
          }
          onChanged();
        } else {
          detailBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * comprises children of &lt;detail&gt;
       * This is optional - if omitted, then the cot message
       * had no data under &lt;detail&gt;
       * </pre>
       *
       * <code>optional .Detail detail = 15;</code>
       */
      public Builder clearDetail() {
        if (detailBuilder_ == null) {
          detail_ = null;
          onChanged();
        } else {
          detail_ = null;
          detailBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * comprises children of &lt;detail&gt;
       * This is optional - if omitted, then the cot message
       * had no data under &lt;detail&gt;
       * </pre>
       *
       * <code>optional .Detail detail = 15;</code>
       */
      public DetailOuterClass.Detail.Builder getDetailBuilder() {
        
        onChanged();
        return getDetailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * comprises children of &lt;detail&gt;
       * This is optional - if omitted, then the cot message
       * had no data under &lt;detail&gt;
       * </pre>
       *
       * <code>optional .Detail detail = 15;</code>
       */
      public DetailOuterClass.DetailOrBuilder getDetailOrBuilder() {
        if (detailBuilder_ != null) {
          return detailBuilder_.getMessageOrBuilder();
        } else {
          return detail_ == null ?
              DetailOuterClass.Detail.getDefaultInstance() : detail_;
        }
      }
      /**
       * <pre>
       * comprises children of &lt;detail&gt;
       * This is optional - if omitted, then the cot message
       * had no data under &lt;detail&gt;
       * </pre>
       *
       * <code>optional .Detail detail = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          DetailOuterClass.Detail, DetailOuterClass.Detail.Builder, DetailOuterClass.DetailOrBuilder> 
          getDetailFieldBuilder() {
        if (detailBuilder_ == null) {
          detailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              DetailOuterClass.Detail, DetailOuterClass.Detail.Builder, DetailOuterClass.DetailOrBuilder>(
                  getDetail(),
                  getParentForChildren(),
                  isClean());
          detail_ = null;
        }
        return detailBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:CotEvent)
    }

    // @@protoc_insertion_point(class_scope:CotEvent)
    private static final Cotevent.CotEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Cotevent.CotEvent();
    }

    public static Cotevent.CotEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CotEvent>
        PARSER = new com.google.protobuf.AbstractParser<CotEvent>() {
      public CotEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CotEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CotEvent> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CotEvent> getParserForType() {
      return PARSER;
    }

    public Cotevent.CotEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CotEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CotEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\016cotevent.proto\022\037atakmap.commoncommo.pr" +
      "otobuf.v1\032\014detail.proto\"\264\002\n\010CotEvent\022\014\n\004" +
      "type\030\001 \001(\t\022\016\n\006access\030\002 \001(\t\022\013\n\003qos\030\003 \001(\t\022" +
      "\014\n\004opex\030\004 \001(\t\022\016\n\006caveat\030\020 \001(\t\022\025\n\rrelease" +
      "ableTo\030\021 \001(\t\022\013\n\003uid\030\005 \001(\t\022\020\n\010sendTime\030\006 " +
      "\001(\004\022\021\n\tstartTime\030\007 \001(\004\022\021\n\tstaleTime\030\010 \001(" +
      "\004\022\013\n\003how\030\t \001(\t\022\013\n\003lat\030\n \001(\001\022\013\n\003lon\030\013 \001(\001" +
      "\022\013\n\003hae\030\014 \001(\001\022\n\n\002ce\030\r \001(\001\022\n\n\002le\030\016 \001(\001\0227\n" +
      "\006detail\030\017 \001(\0132\'.atakmap.commoncommo.prot" +
      "obuf.v1.Detailb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          DetailOuterClass.getDescriptor(),
        }, assigner);
    internal_static_CotEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CotEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CotEvent_descriptor,
        new String[] { "Type", "Access", "Qos", "Opex", "Caveat", "ReleaseableTo", "Uid", "SendTime", "StartTime", "StaleTime", "How", "Lat", "Lon", "Hae", "Ce", "Le", "Detail", });
    DetailOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
